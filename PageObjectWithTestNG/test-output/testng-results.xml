<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="57844" started-at="2021-07-30T13:32:19Z" finished-at="2021-07-30T13:33:17Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="57844" started-at="2021-07-30T13:32:19Z" finished-at="2021-07-30T13:33:17Z">
      <class name="TestCases.LogintestCase">
        <test-method status="PASS" signature="browserlaunch()[pri:0, instance:TestCases.LogintestCase@735b5592]" name="browserlaunch" is-config="true" duration-ms="38034" started-at="2021-07-30T19:02:19Z" finished-at="2021-07-30T19:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserlaunch -->
        <test-method status="PASS" signature="login()[pri:1, instance:TestCases.LogintestCase@735b5592]" name="login" duration-ms="5735" started-at="2021-07-30T19:02:57Z" finished-at="2021-07-30T19:03:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="screenshot(org.testng.ITestResult)[pri:0, instance:TestCases.LogintestCase@735b5592]" name="screenshot" is-config="true" duration-ms="0" started-at="2021-07-30T19:03:03Z" finished-at="2021-07-30T19:03:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LogintestCase.login()[pri:1, instance:TestCases.LogintestCase@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method status="FAIL" signature="HomeVerify()[pri:2, instance:TestCases.LogintestCase@735b5592]" name="HomeVerify" duration-ms="5926" started-at="2021-07-30T19:03:03Z" finished-at="2021-07-30T19:03:09Z">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=92.0.4515.107)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-1DQBIRU', ip: '192.168.29.96', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.107, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\srinath\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:55975}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a7c30eebc1460b85d533a7d7ab610520
*** Element info: {Using=id, value=}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified
  (Session info: chrome=92.0.4515.107)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-1DQBIRU', ip: '192.168.29.96', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.107, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\srinath\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:55975}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a7c30eebc1460b85d533a7d7ab610520
*** Element info: {Using=id, value=}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at Pages.HomePage.verifyHome(HomePage.java:19)
	at TestCases.LogintestCase.HomeVerify(LogintestCase.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomeVerify -->
        <test-method status="PASS" signature="screenshot(org.testng.ITestResult)[pri:0, instance:TestCases.LogintestCase@735b5592]" name="screenshot" is-config="true" duration-ms="762" started-at="2021-07-30T19:03:09Z" finished-at="2021-07-30T19:03:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HomeVerify status=FAILURE method=LogintestCase.HomeVerify()[pri:2, instance:TestCases.LogintestCase@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method status="PASS" signature="logout()[pri:3, instance:TestCases.LogintestCase@735b5592]" name="logout" duration-ms="4658" started-at="2021-07-30T19:03:10Z" finished-at="2021-07-30T19:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="screenshot(org.testng.ITestResult)[pri:0, instance:TestCases.LogintestCase@735b5592]" name="screenshot" is-config="true" duration-ms="0" started-at="2021-07-30T19:03:14Z" finished-at="2021-07-30T19:03:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=LogintestCase.logout()[pri:3, instance:TestCases.LogintestCase@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:TestCases.LogintestCase@735b5592]" name="closeBrowser" is-config="true" duration-ms="2642" started-at="2021-07-30T19:03:14Z" finished-at="2021-07-30T19:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- TestCases.LogintestCase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
